export interface Accessory {
    id: number;
    name: string;
    brand: number;
    brand_name: string;
    code: string;
    cost_price: number;
    selling_unite_price: number;
    selling_semi_bulk_price: number | null;
    selling_bulk_price: number | null;
    description: string | null;
    note: string | null;
    sku: string | null;
    photo: string | null;
    created_at: string;
    updated_at: string;
    product_type: string;
    accessory_category: string;
    accessory_category_display: string;
    color: string | null;
    material: string | null;
    compatible_phones: number[];
    compatible_phones_info: Array<{
        id: number;
        name: string;
        code: string;
    }>;
    voltage_v: number | null;
    amperage_a: number | null;
    wattage_w: number | null;
    battery_capacity_mah: number | null;
    cable_type: string | null;
    length_cm: number | null;
    connection_type: string | null;
    wireless_range_m: number | null;
    noise_cancellation: boolean;
    hardness_rating: string | null;
    finish: string | null;
    additional_specs: Record<string, any> | null;
    stock_quantity: number;
}
declare const accessoryService: {
    getAllAccessories: (params?: Record<string, any>) => Promise<any>;
    getAccessoryById: (id: number) => Promise<any>;
    createAccessory: (accessoryData: FormData) => Promise<any>;
    updateAccessory: (id: number, accessoryData: FormData) => Promise<any>;
    deleteAccessory: (id: number) => Promise<any>;
    searchByCode: (code: string) => Promise<any>;
    searchByName: (name: string) => Promise<any>;
    getByCategory: (category: string) => Promise<any>;
    getCompatibleWithPhone: (phoneId: number) => Promise<any>;
};
export default accessoryService;

# Generated by Django 5.2.1 on 2025-05-07 22:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('origin_country', models.CharField(blank=True, max_length=100, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='brand_pictures/')),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_unite_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_semi_bulk_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('selling_bulk_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='product_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(blank=True, max_length=4, null=True, unique=True)),
                ('product_type', models.CharField(choices=[('phone', 'Phone'), ('accessory', 'Accessory')], editable=False, max_length=50)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_products', to='api.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='api.brand')),
            ],
            options={
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('sale_type', models.CharField(choices=[('bulk', 'Bulk'), ('semi-bulk', 'Semi-Bulk'), ('particular', 'Particular')], max_length=50)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('has_invoice', models.BooleanField(default=False)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sold_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('invoice_number', models.CharField(max_length=100, unique=True)),
                ('customer_info', models.TextField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='api.sale')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_sold', models.PositiveIntegerField()),
                ('price_per_item', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.sale')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.product')),
                ('processor', models.CharField(blank=True, max_length=100, null=True)),
                ('ram_gb', models.PositiveIntegerField(blank=True, null=True)),
                ('storage_gb', models.PositiveIntegerField(blank=True, null=True)),
                ('screen_size_inch', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('screen_type', models.CharField(blank=True, choices=[('oled', 'OLED'), ('amoled', 'AMOLED'), ('lcd', 'LCD'), ('ips_lcd', 'IPS LCD'), ('retina', 'Retina'), ('dynamic_amoled', 'Dynamic AMOLED'), ('other', 'Other')], max_length=50, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('rear_camera_mp', models.CharField(blank=True, max_length=100, null=True)),
                ('front_camera_mp', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_mah', models.PositiveIntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('condition', models.CharField(choices=[('new', 'New'), ('used', 'Used'), ('refurbished', 'Refurbished'), ('open_box', 'Open Box')], default='new', max_length=50)),
                ('version', models.CharField(choices=[('global', 'Global'), ('chinese', 'Chinese'), ('indian', 'Indian'), ('european', 'European'), ('us', 'US'), ('other', 'Other')], default='global', max_length=50)),
                ('phone_type', models.CharField(choices=[('ordinary', 'Ordinary'), ('foldable', 'Foldable'), ('flip', 'Flip'), ('tablet', 'Tablet'), ('gaming', 'Gaming Phone'), ('rugged', 'Rugged Phone'), ('other', 'Other')], default='ordinary', max_length=50)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='api.model')),
            ],
            bases=('api.product',),
        ),
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.product')),
                ('accessory_category', models.CharField(choices=[('case', 'Phone Case'), ('charger', 'Charger'), ('wired_headphones', 'Wired Headphones'), ('wireless_headphones', 'Wireless Headphones'), ('cable', 'Charging Cable'), ('screen_protector', 'Screen Protector'), ('power_bank', 'Power Bank'), ('other', 'Other')], max_length=50)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('voltage_v', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('amperage_a', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('wattage_w', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('battery_capacity_mah', models.PositiveIntegerField(blank=True, null=True)),
                ('cable_type', models.CharField(blank=True, max_length=50, null=True)),
                ('length_cm', models.PositiveIntegerField(blank=True, null=True)),
                ('connection_type', models.CharField(blank=True, max_length=50, null=True)),
                ('wireless_range_m', models.PositiveIntegerField(blank=True, null=True)),
                ('noise_cancellation', models.BooleanField(default=False)),
                ('hardness_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('finish', models.CharField(blank=True, max_length=50, null=True)),
                ('additional_specs', models.JSONField(blank=True, default=dict, null=True)),
                ('compatible_phones', models.ManyToManyField(blank=True, related_name='compatible_accessories', to='api.phone')),
            ],
            bases=('api.product',),
        ),
    ]
